---
version: '3.4'

services:
    api:
        build:
            context: .
            dockerfile: Dockerfile
            target: test
        command: python -m catalog.api
        environment:
            MONGODB_URI: 'mongodb://root:example@mongo:27017/?replicaSet=rs0'
            PYTHONUNBUFFERED: '1'
#            CATALOG_DATA: '/app/images'
        ports:
            - 8000:8000
        volumes:
            - ./src/catalog:/app/catalog
            - ./tests:/app/tests
            - ./swagger:/app/swagger
            - ./auth.ini:/app/auth.ini
            - ./media:/app/images
        depends_on:
            - mongo

    mongo:
        image: 'bitnami/mongodb:latest'
        environment:
            MONGODB_ROOT_PASSWORD: example
            MONGODB_REPLICA_SET_MODE: primary
            MONGODB_REPLICA_SET_NAME: rs0
            MONGODB_REPLICA_SET_KEY: replicaSetKey
        ports:
            - 27017:27017

    tests:
        build:
          context: .
          dockerfile: Dockerfile
          target: test
        command: python -m pytest tests/integration
        environment:
            PYTHONUNBUFFERED: '1'
            MONGODB_URI: 'mongodb://root:example@mongo:27017/?replicaSet=rs0'
        volumes:
            - ./src/catalog:/app/catalog
            - ./tests:/app/tests
            - ./swagger:/app/swagger
            - ./auth.ini:/app/auth.ini
            - ./media:/app/images
        depends_on:
            - mongo

#    web:
#        image: nginx
#        volumes:
#            - ./nginx.conf:/etc/nginx/conf.d/default.conf
#            - ./images:/etc/nginx/html/static/images
#        ports:
#            - "80:80"
#        depends_on:
#            - api
